<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dao.UserAccountMapper">
  <resultMap id="BaseResultMap" type="com.example.pojo.UserAccount">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="question" jdbcType="VARCHAR" property="question" />
    <result column="answer" jdbcType="VARCHAR" property="answer" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from user_account
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.pojo.UserAccount">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into user_account (user_id, username, password, 
      question, answer, created_at, 
      updated_at)
    values (#{userId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{question,jdbcType=VARCHAR}, #{answer,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.example.pojo.UserAccount">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_account
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      question = #{question,jdbcType=VARCHAR},
      answer = #{answer,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select user_id, username, password, question, answer, created_at, updated_at
    from user_account
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select user_id, username, password, question, answer, created_at, updated_at
    from user_account
  </select>

  <select id="findCountByUsername" parameterType="string" resultType="java.lang.Integer">
    select count(*)
    from user_account
    where username = #{username}
  </select>

  <select id="findRowByUsernameAndPassword" parameterType="map" resultMap="BaseResultMap">
    select user_id, username, password, question, answer, created_at,
           updated_at
    from user_account
    where username = #{username} and password = #{password}
  </select>

  <select id="findUpdateAtByUserId" parameterType="int" resultType="java.util.Date">
    select updated_at
    from user_account
    where user_id = #{userId}
  </select>

  <select id="findQuestionByUsername" parameterType="string" resultType="string">
    select question
    from user_account
    where username = #{username}
  </select>

  <select id="findAnswerByOthers" parameterType="com.example.pojo.UserAccount" resultType="string">
    select answer
    from user_account
    where username = #{username} and
          question = #{question}
  </select>

  <update id="updatePasswordByOthers" parameterType="com.example.pojo.UserAccount">
    update user_account
    set
    password = #{password,jdbcType=VARCHAR},
    updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where username = #{username,jdbcType=VARCHAR} and
    question = #{question,jdbcType=VARCHAR} and
    answer = #{answer,jdbcType=VARCHAR}
  </update>

</mapper>